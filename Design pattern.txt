Design pattern:
It is a effective and tested way of doing certain tasks. However we are free to create a better variant if we can do.
A singleton class is a considered as design pattern, how many people consider it controversial.

In a singleton class only one object is allowed to be created. for the purpose, the strategy used is to create and use the
1. private constructor
2. Public static factory method
3. private static variable.

A singleton class may be useful for certain tasks like database connection, logging connection where several people have 
same requirement then it is not recommended to create separate object for every requirement. We can create a single object 
and use the same for every similer requirement so that performance and memory utilization will be improved.

This is the central idea of singleton classes and Runtime class is implemented by using this approach.

However extensive usage of singlton classes is not a favourable idea. for example use of singleton is not good for multithreading as usage of a single object can limit the idea of multi threading.

Singletons can not be used for clustering and are not good for effective memory management.
Singletons forces the programmer to know the internal structure of the program as methods and variables used are static, at class level and unit testing static methods is not an easy task.
singletons are not good for unit testing and extending the singletons is also difficult.